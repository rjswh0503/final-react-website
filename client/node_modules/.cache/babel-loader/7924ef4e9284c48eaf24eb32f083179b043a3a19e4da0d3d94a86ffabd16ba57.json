{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user1\\\\final-react-website\\\\client\\\\src\\\\Component\\\\Music\\\\MusicPlayerTwo.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MusicPlayer = () => {\n  _s();\n  //초기값만 필요하고 변경값이 필요하지 않을 때 사용하는 useState\n\n  const [state, setState] = useState({\n    playlist: ['1.mp3', '2.mp3', '3.mp3']\n  });\n\n  // 재생 버튼을 누를 때 재생이 될 수 있도록 설정\n  const playSong = () => {\n    setIsPlaying(true);\n    audio.play();\n    console.log('곡 재생 : ', playlist[currentSong]);\n  };\n  // 일시정지 버튼\n  const pauseSong = () => {\n    setIsPlaying(false);\n    audio.pause();\n    console.log('일시정지');\n  };\n\n  //재생목록\n  const displayPlaylist = () => {\n    console.log('재생목록 : ', playlist.json(','));\n  };\n\n  // 다음곡 재생\n\n  const playNextSong = () => {\n    const nextSong = (currentSong + 1) % playlist.length;\n    setCurrentSong(nextSong);\n    setIsPlaying;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uC74C\\uC545\\uD50C\\uB808\\uC774\\uC5B4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uD604\\uC7AC \\uC7AC\\uC0DD\\uC911: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: playSong,\n      disabled: isPlaying,\n      children: \"\\uC7AC\\uC0DD\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: pauseSong,\n      disabled: !isPlaying,\n      children: \"\\uC77C\\uC2DC\\uC815\\uC9C0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: displayPlaylist,\n      children: \"\\uC7AC\\uC0DD \\uBAA9\\uB85D \\uBCF4\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n_s(MusicPlayer, \"prlwA1ar9zMYDg6pgPpRe7YBdos=\");\n_c = MusicPlayer;\nexport default MusicPlayer;\nvar _c;\n$RefreshReg$(_c, \"MusicPlayer\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","MusicPlayer","_s","state","setState","playlist","playSong","setIsPlaying","audio","play","console","log","currentSong","pauseSong","pause","displayPlaylist","json","playNextSong","nextSong","length","setCurrentSong","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","isPlaying","_c","$RefreshReg$"],"sources":["C:/Users/user1/final-react-website/client/src/Component/Music/MusicPlayerTwo.js"],"sourcesContent":["import React, {useState, useEffect} from \"react\";\r\n\r\nconst MusicPlayer = () => {\r\n    //초기값만 필요하고 변경값이 필요하지 않을 때 사용하는 useState\r\n\r\n    const [state, setState] = useState({\r\n        playlist:['1.mp3','2.mp3','3.mp3'],\r\n\r\n    });\r\n   \r\n    // 재생 버튼을 누를 때 재생이 될 수 있도록 설정\r\n    const playSong = () => {\r\n        setIsPlaying(true);\r\n        audio.play();\r\n        console.log('곡 재생 : ', playlist[currentSong]);\r\n    };\r\n    // 일시정지 버튼\r\n    const pauseSong = () => {\r\n        setIsPlaying(false);\r\n        audio.pause();\r\n        console.log('일시정지');\r\n    };\r\n\r\n\r\n\r\n    //재생목록\r\n    const displayPlaylist = () => {\r\n        console.log('재생목록 : ', playlist.json(','));\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    // 다음곡 재생\r\n\r\n    const playNextSong = () => {\r\n        const nextSong = (currentSong + 1) %playlist.length;\r\n        setCurrentSong(nextSong);\r\n        setIsPlaying\r\n    }\r\n\r\n\r\n\r\n\r\n    return(\r\n        <div>\r\n            <h1>음악플레이어</h1>\r\n            <p>현재 재생중: </p>\r\n            <button onClick={playSong} disabled={isPlaying}>\r\n                재생\r\n            </button>\r\n            <button onClick={pauseSong} disabled={!isPlaying}>\r\n                일시정지\r\n            </button>\r\n            <button onClick={displayPlaylist}>재생 목록 보기</button>\r\n        </div>\r\n    )\r\n    \r\n};\r\n\r\nexport default MusicPlayer;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB;;EAEA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC;IAC/BQ,QAAQ,EAAC,CAAC,OAAO,EAAC,OAAO,EAAC,OAAO;EAErC,CAAC,CAAC;;EAEF;EACA,MAAMC,QAAQ,GAAGA,CAAA,KAAM;IACnBC,YAAY,CAAC,IAAI,CAAC;IAClBC,KAAK,CAACC,IAAI,CAAC,CAAC;IACZC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEN,QAAQ,CAACO,WAAW,CAAC,CAAC;EACjD,CAAC;EACD;EACA,MAAMC,SAAS,GAAGA,CAAA,KAAM;IACpBN,YAAY,CAAC,KAAK,CAAC;IACnBC,KAAK,CAACM,KAAK,CAAC,CAAC;IACbJ,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;EACvB,CAAC;;EAID;EACA,MAAMI,eAAe,GAAGA,CAAA,KAAM;IAC1BL,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEN,QAAQ,CAACW,IAAI,CAAC,GAAG,CAAC,CAAC;EAC9C,CAAC;;EAMD;;EAEA,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACvB,MAAMC,QAAQ,GAAG,CAACN,WAAW,GAAG,CAAC,IAAGP,QAAQ,CAACc,MAAM;IACnDC,cAAc,CAACF,QAAQ,CAAC;IACxBX,YAAY;EAChB,CAAC;EAKD,oBACIP,OAAA;IAAAqB,QAAA,gBACIrB,OAAA;MAAAqB,QAAA,EAAI;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACfzB,OAAA;MAAAqB,QAAA,EAAG;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACfzB,OAAA;MAAQ0B,OAAO,EAAEpB,QAAS;MAACqB,QAAQ,EAAEC,SAAU;MAAAP,QAAA,EAAC;IAEhD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTzB,OAAA;MAAQ0B,OAAO,EAAEb,SAAU;MAACc,QAAQ,EAAE,CAACC,SAAU;MAAAP,QAAA,EAAC;IAElD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTzB,OAAA;MAAQ0B,OAAO,EAAEX,eAAgB;MAAAM,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClD,CAAC;AAGd,CAAC;AAACvB,EAAA,CAzDID,WAAW;AAAA4B,EAAA,GAAX5B,WAAW;AA2DjB,eAAeA,WAAW;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}