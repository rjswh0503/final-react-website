{"ast":null,"code":"var _jsxFileName = \"/Users/shinjaeheon/Desktop/final-react-website/client/src/Component/Music/MusicPlayer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MusicPlayer = () => {\n  _s();\n  const audioUrls = ['https://ex/song1.mp3', 'https://ex/song2.mp3'];\n\n  //플레이 리스트\n  const [playlist, setPlaylist] = useState(['제목1', '제목2', '제목3']);\n  //현재 재생중인 음악\n  const [currentSong, setCurrentSong] = useState(0);\n  // 음악 재생, 음악 일시정지 를 위한 상태\n  const [isPlaying, setIsPlaying] = useState(false);\n  //오디오 박스\n  const [audio, setAudio] = useState(new Audio(audioUrls[currentSong]));\n  useEffect(() => {\n    // Audio 박스 객체를 초기화\n    setAudio(new Audio(audioUrls[currentSong]));\n\n    //재생중을 누를 경우 재생이 될 수 있도록 설정\n    if (isPlaying) {\n      audio.play();\n    }\n\n    //Audio 시작할 때 시간과 일시정지 설정\n    return () => {\n      audio.pause();\n      audio.currentTime = 0;\n    };\n  }, [currentSong]);\n\n  //재생버튼을 누를 때 재생이 될 수 있도록 설정\n  const playSong = () => {\n    setIsPlaying(true);\n    audio.play();\n    console.log('곡 재생 : ', playlist[currentSong]);\n  };\n  //일시정지 버튼\n  const pauseSong = () => {\n    setIsPlaying(false);\n    audio.pause();\n    console.log('일시정지');\n  };\n  //재생목록\n  const displayPlayList = () => {\n    console.log('재생목록 : ', playlist.join(','));\n  };\n\n  //다음곡 재생\n  const playNextSong = () => {\n    const nextSong = (currentSong + 1) % playlist.length;\n    setCurrentSong(nextSong);\n    setIsPlaying(true);\n    console.log('다음 곡 재생', playlist[nextSong]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uC74C\\uC545 \\uD50C\\uB808\\uC774\\uC5B4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\uD604\\uC7AC \\uC7AC\\uC0DD\\uC911 : \", playlist[currentSong]]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: playSong,\n      disabled: isPlaying,\n      children: \"\\uC7AC\\uC0DD\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: pauseSong,\n      disabled: !isPlaying,\n      children: \"\\uC77C\\uC2DC\\uC815\\uC9C0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: playNextSong,\n      children: \"\\uB2E4\\uC74C \\uACE1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: displayPlayList,\n      children: \"\\uC7AC\\uC0DD \\uBAA9\\uB85D \\uBCF4\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(MusicPlayer, \"K8YNRPqO4eAHnl5iV1lfCTjjEno=\");\n_c = MusicPlayer;\nexport default MusicPlayer;\nvar _c;\n$RefreshReg$(_c, \"MusicPlayer\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","MusicPlayer","_s","audioUrls","playlist","setPlaylist","currentSong","setCurrentSong","isPlaying","setIsPlaying","audio","setAudio","Audio","play","pause","currentTime","playSong","console","log","pauseSong","displayPlayList","join","playNextSong","nextSong","length","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/shinjaeheon/Desktop/final-react-website/client/src/Component/Music/MusicPlayer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nconst MusicPlayer = () => {\n  const audioUrls = ['https://ex/song1.mp3', 'https://ex/song2.mp3'];\n\n  //플레이 리스트\n  const [playlist, setPlaylist] = useState(['제목1', '제목2', '제목3']);\n  //현재 재생중인 음악\n  const [currentSong, setCurrentSong] = useState(0);\n  // 음악 재생, 음악 일시정지 를 위한 상태\n  const [isPlaying, setIsPlaying] = useState(false);\n  //오디오 박스\n  const [audio, setAudio] = useState(new Audio(audioUrls[currentSong]));\n\n  useEffect(() => {\n    // Audio 박스 객체를 초기화\n    setAudio(new Audio(audioUrls[currentSong]));\n\n    //재생중을 누를 경우 재생이 될 수 있도록 설정\n    if (isPlaying) {\n      audio.play();\n    }\n\n    //Audio 시작할 때 시간과 일시정지 설정\n    return () => {\n      audio.pause();\n      audio.currentTime = 0;\n    };\n  }, [currentSong]);\n\n  //재생버튼을 누를 때 재생이 될 수 있도록 설정\n  const playSong = () => {\n    setIsPlaying(true);\n    audio.play();\n    console.log('곡 재생 : ', playlist[currentSong]);\n  };\n  //일시정지 버튼\n  const pauseSong = () => {\n    setIsPlaying(false);\n    audio.pause();\n    console.log('일시정지');\n  };\n  //재생목록\n  const displayPlayList = () => {\n    console.log('재생목록 : ', playlist.join(','));\n  };\n\n  //다음곡 재생\n  const playNextSong = () => {\n    const nextSong = (currentSong + 1) % playlist.length;\n    setCurrentSong(nextSong);\n    setIsPlaying(true);\n    console.log('다음 곡 재생', playlist[nextSong]);\n  };\n\n  return (\n    <div>\n      <h1>음악 플레이어</h1>\n      <p>현재 재생중 : {playlist[currentSong]}</p>\n      <button onClick={playSong} disabled={isPlaying}>\n        재생\n      </button>\n      <button onClick={pauseSong} disabled={!isPlaying}>\n        일시정지\n      </button>\n      <button onClick={playNextSong}>다음 곡</button>\n      <button onClick={displayPlayList}>재생 목록 보기</button>\n    </div>\n  );\n};\nexport default MusicPlayer;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACnD,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAMC,SAAS,GAAG,CAAC,sBAAsB,EAAE,sBAAsB,CAAC;;EAElE;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;EAC/D;EACA,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EACjD;EACA,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACjD;EACA,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,IAAIe,KAAK,CAACT,SAAS,CAACG,WAAW,CAAC,CAAC,CAAC;EAErER,SAAS,CAAC,MAAM;IACd;IACAa,QAAQ,CAAC,IAAIC,KAAK,CAACT,SAAS,CAACG,WAAW,CAAC,CAAC,CAAC;;IAE3C;IACA,IAAIE,SAAS,EAAE;MACbE,KAAK,CAACG,IAAI,CAAC,CAAC;IACd;;IAEA;IACA,OAAO,MAAM;MACXH,KAAK,CAACI,KAAK,CAAC,CAAC;MACbJ,KAAK,CAACK,WAAW,GAAG,CAAC;IACvB,CAAC;EACH,CAAC,EAAE,CAACT,WAAW,CAAC,CAAC;;EAEjB;EACA,MAAMU,QAAQ,GAAGA,CAAA,KAAM;IACrBP,YAAY,CAAC,IAAI,CAAC;IAClBC,KAAK,CAACG,IAAI,CAAC,CAAC;IACZI,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEd,QAAQ,CAACE,WAAW,CAAC,CAAC;EAC/C,CAAC;EACD;EACA,MAAMa,SAAS,GAAGA,CAAA,KAAM;IACtBV,YAAY,CAAC,KAAK,CAAC;IACnBC,KAAK,CAACI,KAAK,CAAC,CAAC;IACbG,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;EACrB,CAAC;EACD;EACA,MAAME,eAAe,GAAGA,CAAA,KAAM;IAC5BH,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEd,QAAQ,CAACiB,IAAI,CAAC,GAAG,CAAC,CAAC;EAC5C,CAAC;;EAED;EACA,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzB,MAAMC,QAAQ,GAAG,CAACjB,WAAW,GAAG,CAAC,IAAIF,QAAQ,CAACoB,MAAM;IACpDjB,cAAc,CAACgB,QAAQ,CAAC;IACxBd,YAAY,CAAC,IAAI,CAAC;IAClBQ,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEd,QAAQ,CAACmB,QAAQ,CAAC,CAAC;EAC5C,CAAC;EAED,oBACEvB,OAAA;IAAAyB,QAAA,gBACEzB,OAAA;MAAAyB,QAAA,EAAI;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChB7B,OAAA;MAAAyB,QAAA,GAAG,oCAAS,EAACrB,QAAQ,CAACE,WAAW,CAAC;IAAA;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvC7B,OAAA;MAAQ8B,OAAO,EAAEd,QAAS;MAACe,QAAQ,EAAEvB,SAAU;MAAAiB,QAAA,EAAC;IAEhD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACT7B,OAAA;MAAQ8B,OAAO,EAAEX,SAAU;MAACY,QAAQ,EAAE,CAACvB,SAAU;MAAAiB,QAAA,EAAC;IAElD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACT7B,OAAA;MAAQ8B,OAAO,EAAER,YAAa;MAAAG,QAAA,EAAC;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC5C7B,OAAA;MAAQ8B,OAAO,EAAEV,eAAgB;MAAAK,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChD,CAAC;AAEV,CAAC;AAAC3B,EAAA,CAnEID,WAAW;AAAA+B,EAAA,GAAX/B,WAAW;AAoEjB,eAAeA,WAAW;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}